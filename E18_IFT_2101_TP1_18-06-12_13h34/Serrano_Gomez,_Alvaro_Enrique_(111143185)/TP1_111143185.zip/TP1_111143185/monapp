#! /bin/bash

#*************************************************************
# Fichier : monapp
# Projet : TP1 IFT-2101 
# Auteur(s) : Alvaro Serrano
# Matricule : 111143185
# Cours : IFT-2101 Protocoles et technologies Internet
# Session : Été 2018
#************************************************************* 

#*************************************************************
#                    SOUS-MENU SYSTÉME
#*************************************************************

#-------------------------------------------------------------
# Fonction : processusEnExecution
# Objectif : Affiche les processus en exécution, mais affiche aussi le détail des threads.
#------------------------------------------------------------- 
function processusEnExecution(){
	clear
	echo "===================================================="
	echo "         Processus en exécution et threads          "
	echo "===================================================="
	top -H -n 2
}

#-------------------------------------------------------------
# Fonction : afficherCrond
# Objectif : Affiche la liste de fichiers ouverts par le service crond
#------------------------------------------------------------- 
function afficherCrond(){
	clear
	echo "===================================================="
	echo "   Liste de fichiers ouverts par le service crond   "
	echo "===================================================="
	lsof | grep crond 
	sleep 3
}


#=============================================================
#                     SOUS-MENU RÉSEAU
#=============================================================

#-------------------------------------------------------------
# Fonction : socketsEnEcoute
# Objectif : Lister tous les ports ouverts en écoute sur le serveur
#------------------------------------------------------------- 
function socketsEnEcoute(){
	clear
	echo "=========================================="
	echo "  Ports ouverts en écoute sur le serveur  "
	echo "=========================================="
	netstat -l | grep LISTENING | more
	sleep 3
}

#-------------------------------------------------------------
# Fonction : socketsOuverts
# Objectif : Demande une adresse IP et y vérifie et affiche tous les ports qui y sont ouverts
#------------------------------------------------------------- 
function socketsOuverts(){
	clear
	echo "=========================================="
    echo "       Parcourir ports distants           "
    echo "=========================================="
	echo Veillez entrer une adresse IP :  
	read host
	port_debut=1
	port_fin=65535
	for ((port=$port_debut; port<=$port_fin; port++)) 
	do
		(echo >/dev/tcp/$host/$port)>/dev/null 2>&1 && echo "$port ouvert"
	done 
	sleep 3
}

#-------------------------------------------------------------
# Fonction : pageDistante
# Objectif : Demande une adresse IP et y vérifie et affiche son contenu html
#-------------------------------------------------------------
function pageDistante(){
	clear
	echo "=========================================="
	echo "         Afficher contenu html            "
	echo "=========================================="
	echo Veillez entrer une adresse IP :  
	read adresseIp
	domain=$(dig +short -x $adresseIp)
	if [ -z $domain ]
	then 
		echo "Aucun nom de domaine trouvé pour l'adresse IP $adresseIp"
	else
		echo -e "\nLe nom de domaine de l'adresse IP $adresseIp est $domain" 

		exec 3<>/dev/tcp/$domain/80
		echo -e "GET / HTTP/1.1\r\nhost: $domain\r\nConnection: close\r\n\r\n" >&3
		cat<&3	
	fi
	sleep 3
}

#-------------------------------------------------------------
# Fonction : serveurDeNoms
# Objectif : Demande un nom de domaine et affiche le serveur DNS autoritarie pour ce nom de domaine.
#-------------------------------------------------------------
function serveurDeNoms(){
	clear
	echo "=========================================="
	echo "       Serveur(s) autoritaire(s) DNS      "
	echo "=========================================="
	echo Veillez entrer un nom de domaine :  
	read nomDomaine
	echo $(dig +short $nomDomaine NS )
	sleep 3
}

#-------------------------------------------------------------
# Fonction : serveurCourriel
# Objectif : Demande un nom de domaine et affiche le serveur qui reçoit les courriels pour ce domaine
#-------------------------------------------------------------
function serveurCourriel(){
	clear
	echo "=========================================="
	echo "          Serveur(s) courriels            "
	echo "=========================================="
	echo Veillez entrer un nom de domaine :  
	read nomDomaine
	echo $(dig +short $nomDomaine MX)
	sleep 3
}


#=============================================================
#                     SOUS-MENU DISQUE
#=============================================================

#-------------------------------------------------------------
# Fonction : utilisation
# Objectif : Affiche toutes les statistiques de l'utilisation du disque en Ko de tous les fichiers
#			 du dossier /etc. De plus, doit permettre un affichage page par page.
#-------------------------------------------------------------
function utilisation(){
	clear
	echo "==================================================="
	echo " Utilisation du disque. Fichiers du dossier /etc   "
	echo "==================================================="
	du /etc -ak | more
	sleep 3
}

#-------------------------------------------------------------
# Fonction : fichiers
# Objectif : Affiche les informations du système de fichiers en 6 colonnes par bloc de 1024 octets et que
# 	         ce soit lisible pour les humaines.
#-------------------------------------------------------------
function fichiers(){
	clear
	echo "==================================================="
	echo "         Informations du système de fichiers        "
	echo "==================================================="
	df -h -k
	sleep 3
}

#=============================================================
#                  MONITEUR SERVEUR
#=============================================================
# Fonction : afficherMoniteurServeur
# Objectif : Affiche information sur le serveur et connexions
#-------------------------------------------------------------
function afficherMoniteurServeur(){
	clear
	echo "==================================================="
	echo "                 MONITEUR SERVEUR                  "
	echo "==================================================="	
	# Vérifier connexion internet
	ping -c 1 ulaval.ca &> /dev/null && echo  "Internet: Connecté" || echo "Internet: Non connecté"
	
	# Vérifier système d'exploitation
	echo  "Type de système d'exploitation :"  $(uname -o)
	cat /etc/os-release | grep 'NAME\|VERSION' | grep -v 'VERSION_ID' | grep -v 'PRETTY_NAME' > /tmp/osrelease
	echo "Version : " $(cat /tmp/osrelease | grep -v "VERSION" | cut -f2 -d\")
	
	# Vérifier Architecture
	echo "Architecture :" $(uname -m)
	
	# Vérifier nom de domaine
	echo "Nom de domaine:" $HOSTNAME
	
	# Vérifier adresse IP interne
	echo "Adresse Ip interne :" $(hostname -I)
	
	# Vérifier adresse IP externe
	echo "Adresse IP externe :" $(curl -s ipecho.net/plain;echo)
	
	# Vérifier utilisateurs connectés
	who>/tmp/who
	echo "Utilisateurs connectés :" $tecreset && cat /tmp/who 
	
	# Vérifier RAM
	free -h | grep -v + > /tmp/ramcache
	echo "Utilisation RAM : " 
	cat /tmp/ramcache | grep -v "Swap"
	
	# Vérifir l'utilisation de disque
	df -h| grep 'Filesystem\|/dev/sda*' > /tmp/diskusage
	echo "Utilisation de disque :"  
	cat /tmp/diskusage
	
	# Supprime fichiers temporels crées
	rm /tmp/osrelease /tmp/who /tmp/ramcache /tmp/diskusage	
	sleep 3
}


#*************************************************************
# Fonction : afficherLogoApplication
# Objectif : Affiche le logo de l'application
#************************************************************* 
function afficherLogo(){
	echo "
    __  ___               ___                                 
   /  |/  /____   ____   /   |   ____   ____    
  / /|_/ // __ \ / __ \ / /| |  / __ \ / __ \     
 / /  / // /_/ // / / // ___ | / /_/ // /_/ /
/_/  /_/ \____//_/ /_//_/  |_|/ .___// .___/
                             /_/    /_/"
}

#*************************************************************
# Fonction : Quitter l'application
# Objectif : Affiche image et message d'au revoir
# Notes :  Attend 2 seconds et efface l'ecran pour revenir au prompt
#************************************************************* 
function quitter(){
	clear
	cat << "EOF"
                   ____                  
                _.' :  `._               
            .-.'`.  ;   .'`.-.           
   __      / : ___\ ;  /___ ; \      __  
 ,'_ ""--.:__;".-.";: :".-.":__;.--"" _`,
 :' `.t""--.. '<@.`;_  ',@>` ..--""j.' `;
      `:-.._J '-.-'L__ `-- ' L_..-;'     
        "-.__ ;  .-"  "-.  : __.-"       
            L ' /.------.\ ' J           
             "-.   "--"   .-"            
            __.l"-:_JL_;-";.__           
         .-j/'.;  ;""""  / .'\"-.        
       .' /:`. "-.:     .-" .';  `.      
    .-"  / ;  "-. "-..-" .-"  :    "-.   
 .+"-.  : :      "-.__.-"      ;-._   \  
 ; \  `.; ;                    : : "+. ; 
 :  ;   ; ;                    : ;  : \: 

	Que la force soit avec toi
EOF
	i=0
	sleep 2
	clear
	exit
}

#=============================================================
#                       MENUS
#=============================================================

#*************************************************************
# Fonction : Afficher menu système
# Objectif : Boucle du menu Système
#************************************************************* 
function afficherMenuSysteme(){
	while :
	do 
		clear
		echo -e "SOUS-MENU SYSTÈME \n"
		echo -e "\t Option \t description"
		echo -e "\t ----------------------------"
		echo -e "\t 1 \t \t Processus en exécution"
		echo -e "\t 2 \t \t Fichiers ouverts par le service crond"
		echo -e "\t 3 \t \t Revenir au menu principal \n"
		echo -e "Votre choix : \c "
		read choix
	
		case $choix in
			1) processusEnExecution ;;
			2) afficherCrond ;;
			3) break ;;
		esac
	done
}

#*************************************************************
# Fonction : Afficher menu réseau
# Objectif : Boucle du menu réseau
#************************************************************* 
function afficherMenuReseau(){
	while :
	do 
		clear
		echo -e "SOUS-MENU RÉSEAU \n"
		echo -e "\t Option \t description"
		echo -e "\t ----------------------------"
		echo -e "\t 1 \t \t Sockets en écoute"
		echo -e "\t 2 \t \t Sockets ouverts (Distant)"
		echo -e "\t 3 \t \t Page distante"
		echo -e "\t 4 \t \t Serveur de noms"
		echo -e "\t 5 \t \t Serveur courriel"
		echo -e "\t 6 \t \t Revenir au menu principal \n"
		echo -e "Votre choix : \c "
		read choix
	
		case $choix in
			1) socketsEnEcoute ;;
			2) socketsOuverts;;
			3) pageDistante ;;
			4) serveurDeNoms ;;
			5) serveurCourriel ;;
			6) break ;;
		esac
	done
}

#*************************************************************
# Fonction : Afficher menu disque
# Objectif : Boucle du menu disque
#************************************************************* 
function afficherMenuDisque(){
	while :
	do 
		clear
		echo -e "SOUS-MENU DISQUE \n"
		echo -e "\t Option \t description"
		echo -e "\t ----------------------------"
		echo -e "\t 1 \t \t Statistiques d'utilisation dossier /etc"
		echo -e "\t 2 \t \t Système de fichiers"
		echo -e "\t 3 \t \t Revenir au menu principal \n"
		echo -e "Votre choix : \c "
		read choix
	
		case $choix in
			1) utilisation ;;
			2) fichiers ;;
			3) break ;;
		esac
	done
}

#*************************************************************
# Fonction : 
# Objectif : Boucle du menu principal
#************************************************************* 

# S'il reçoit un second paramètre, il exécute cette option su sous-menu
case $1$2 in
	11) processusEnExecution ;;
	12) afficherCrond ;;
	21) socketsEnEcoute ;;
	22) socketsOuverts ;;
	23) pageDistante;;
	24) serveurDeNoms ;;
	25) serveurCourriel;;
	31) utilisation  ;;
	32) fichiers;;
esac

# S'il reçoit seulement un paramètre, il se dirige automatiquement dans cette option du menu
if [ -z "$2" ]
then
	case $1 in
		1) afficherMenuSysteme ;;
		2) afficherMenuReseau ;;
		3) afficherMenuDisque;;
		4) afficherMoniteurServeur ;;
	esac
fi

# Si aucun paramètre est saisi, afficher le menu principal
while :
do 
	clear
	afficherLogo
	echo -e "MENU PRINCIPAL \n"
	echo -e "\t Option \t description"
	echo -e "\t ----------------------------"
	echo -e "\t 1 \t \t Système"
	echo -e "\t 2 \t \t Réseau"
	echo -e "\t 3 \t \t Disque"
	echo -e "\t 4 \t \t Moniteur"
	echo -e "\t 5 \t \t Quitter \n"
	echo -e "Votre choix : \c "
	read choix
	
	case $choix in
		1) afficherMenuSysteme ;;
		2) afficherMenuReseau ;;
		3) afficherMenuDisque;;
		4) afficherMoniteurServeur ;;
		5) quitter ;;
	esac
done
















